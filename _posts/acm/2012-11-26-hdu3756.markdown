---
layout: post
title: HDU3756二分或三分求满足题意的圆锥体积
author: "R. Liao" 
categories: acm
tags: ACM
---

### 链接  
[Dome of Circusl](http://acm.hdu.edu.cn/showproblem.php?pid=3756)

### 题意
求一个圆锥的最小体积，要求这个圆锥必须覆盖所有给出的点

### 分析
因为是立体的，处理起来比较麻烦，所以就抽象到一个区间来考虑;  
圆锥的体积```V=1/3*（Pi*r*r）*h```;  
所以影响体积的就是：```h*r*r```；  
求了半天求不出来，所以就只能考虑搜索了;  
这里二分和三分都是可以的，注意要排序下;  
还要用到直角三角形相似;  
因为这样可以把h和r关联起来，二分搜索直接搜索h就可以了；

### 代码  
```
/**============================================================================
#	   @author	         Jarily
#	   @name		 HDOJ 3756
#	   @date		 2012/11/26
============================================================================**/
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
using namespace std;

const int N=10010;
struct point
{
    double x;
    double y;
    double z;
} p[N];

double dist(const point & a)//到z轴的距离
{
    return sqrt(a.x*a.x+a.y*a.y);
}

double find_r(double h,int t)
{
    double r=0;
    for(int i=0; i<t; i++)
    {
        if(r<h*p[i].x/(h-p[i].z))//直角三角形相似
            r=h*p[i].x/(h-p[i].z);
    }
    return r;
}

bool cmp(const point & a,const point & b)
{
    return a.z>b.z;
}

void search(int t)//二分
{
    double eps=1e-10;
    double left=p[0].z;
    double right=1<<20;
    while(right-left>eps)
    {
        double mid=(right+left)/2;
        double r=find_r(mid,t);//r
        double r1=find_r(right,t);
        if(r1*r1*right<r*r*mid)//h*r*r
            left=mid;
        else
            right=mid;
    }
    printf("%.3lf %.3lf\n",left,find_r(left,t));
}

void searchs(int t)//三分（随便用哪个都行）
{
    double eps=1e-10;
    double left=p[0].z;
    double right=1<<20;
    while(right-left>eps)
    {
        double temp=(right-left)/3;
        double mid1=left+temp;//h
        double mid2=left+2*temp;//h
        double r1=find_r(mid1,t);//r
        double r2=find_r(mid2,t);//r
        if(r1*r1*mid1>r2*r2*mid2)//h*r*r
            left=mid1;
        else
            right=mid2;
    }
    printf("%.3lf %.3lf\n",left,find_r(left,t));
}

int main()
{
    double h,r;
    //freopen("C:\\Users\\Administrator\\Desktop\\kd.txt","r",stdin);
    int tcase;
    cin>>tcase;
    while(tcase--)
    {
        int t;
        cin>>t;
        for(int i=0; i<t; i++)
        {
            cin>>p[i].x>>p[i].y>>p[i].z;
            p[i].x=dist(p[i]);
            p[i].y=0;
        }
        sort(p,p+t,cmp);
        search(t);
    }
    return 0;
}
```